name: Build LaTeX document and Deploy to GitHub Pages
on: [push]
jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@master
        with:
          root_file: PetroRavlinko-CV.tex
      - run: mkdir -p target
      - run: mv PetroRavlinko-CV.pdf target/PetroRavlinko-CV.pdf
      - name: Upload PDF file
        uses: actions/upload-artifact@master
        with:
          name: cv.zip
          path: ./target

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: cv.zip

      - name: Convert PDF to HTML
        uses: SichangHe/pdf2htmlEX-action@v0.0.2
        with:
          arguments: target/PetroRavlinko-CV.pdf  index.html
  
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy_pages:
      needs: build_latex
      permissions:
        pages: write
        id-token: write
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4

        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          if: github.event_name == 'push' # Створювати реліз тільки при push
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: v${{ github.run_number }}
            release_name: Release v${{ github.run_number }}
            body: |
              Automatically generated version of the resume on ${{ github.event.head_commit.timestamp }}.
              Updated HTML after the latest changes.
            draft: false
            prerelease: false

        - name: Upload Release Asset
          uses: actions/upload-release-asset@v1
          if: github.event_name == 'push'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./cv.zip
            asset_name: cv.zip
            asset_content_type: application/zip